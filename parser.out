Grammar:

Rule 0     S' -> program
Rule 1     program -> START statements END
Rule 2     statements -> statement
Rule 3     statements -> statement statements
Rule 4     statement -> COMMENT
Rule 5     statement -> PRINT expr PERIOD
Rule 6     statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
Rule 7     statement -> NAME ASSIGNMENT expr PERIOD
Rule 8     statement -> RETURN expr PERIOD
Rule 9     statement -> WHILE_1 expr WHILE_2 statements END
Rule 10    statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END
Rule 11    statement -> IF_1 expr COMMA statements END
Rule 12    statement -> IF_1 expr COMMA statements ELSE statements END
Rule 13    statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
Rule 14    statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
Rule 15    vars -> NAME
Rule 16    vars -> NAME AND NAME
Rule 17    vars -> NAME COMMA vars_sub
Rule 18    vars_sub -> NAME AND NAME
Rule 19    vars_sub -> NAME COMMA vars_sub
Rule 20    exprs -> expr
Rule 21    exprs -> exprs_sub AND expr
Rule 22    exprs_sub -> expr
Rule 23    exprs_sub -> exprs_sub COMMA expr
Rule 24    expr -> NAME
Rule 25    expr -> STRING
Rule 26    expr -> NUMBER
Rule 27    expr -> QUOTE NAME QUOTE
Rule 28    expr -> expr GT expr  [precedence=nonassoc, level=1]
Rule 29    expr -> expr LT expr  [precedence=nonassoc, level=1]
Rule 30    expr -> expr EQ expr  [precedence=nonassoc, level=1]
Rule 31    expr -> expr DIVIDE expr  [precedence=left, level=2]
Rule 32    expr -> expr TIMES expr  [precedence=left, level=2]
Rule 33    expr -> expr MINUS expr  [precedence=left, level=3]
Rule 34    expr -> expr PLUS expr  [precedence=left, level=3]
Rule 35    expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD

Unused terminals:

    LPAREN
    RPAREN

Terminals, with rules where they appear:

AND                  : 16 18 21
ASSIGNMENT           : 7
COMMA                : 6 11 12 13 14 17 19 23 35
COMMENT              : 4
DIVIDE               : 31
ELSE                 : 12
END                  : 1 9 10 11 12 13 14
EQ                   : 30
FN_CALL_1            : 6 35
FN_CALL_2            : 35
FN_CALL_2_ASSIGN     : 6
FN_DEF_1             : 14
FN_DEF_1_PLURAL      : 13
FN_DEF_2             : 13 14
FN_DEF_3             : 13 14
FOR_1                : 10
FOR_2                : 10
FOR_3                : 10
GT                   : 28
IF_1                 : 11 12
LPAREN               : 
LT                   : 29
MINUS                : 33
NAME                 : 6 6 7 10 13 14 14 15 16 16 17 18 18 19 24 27 35
NUMBER               : 26
PERIOD               : 5 6 7 8 35
PLUS                 : 34
PRINT                : 5
QUOTE                : 27 27
RETURN               : 8
RPAREN               : 
START                : 1
STRING               : 25
TIMES                : 32
WHILE_1              : 9
WHILE_2              : 9
error                : 

Nonterminals, with rules where they appear:

expr                 : 5 7 8 9 10 10 11 12 20 21 22 23 28 28 29 29 30 30 31 31 32 32 33 33 34 34
exprs                : 6 35
exprs_sub            : 21 23
program              : 0
statement            : 2 3
statements           : 1 3 9 10 11 12 12 13 14
vars                 : 13
vars_sub             : 17 19


state 0

    (0) S' -> . program
    (1) program -> . START statements END
    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> START . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 3
    statement                      shift and go to state 4

state 3

    (1) program -> START statements . END
    END             shift and go to state 14


state 4

    (2) statements -> statement .
    (3) statements -> statement . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    END             reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statement                      shift and go to state 4
    statements                     shift and go to state 15

state 5

    (4) statement -> COMMENT .
    COMMENT         reduce using rule 4 (statement -> COMMENT .)
    PRINT           reduce using rule 4 (statement -> COMMENT .)
    FN_CALL_1       reduce using rule 4 (statement -> COMMENT .)
    NAME            reduce using rule 4 (statement -> COMMENT .)
    RETURN          reduce using rule 4 (statement -> COMMENT .)
    WHILE_1         reduce using rule 4 (statement -> COMMENT .)
    IF_1            reduce using rule 4 (statement -> COMMENT .)
    FN_DEF_1_PLURAL reduce using rule 4 (statement -> COMMENT .)
    FN_DEF_1        reduce using rule 4 (statement -> COMMENT .)
    END             reduce using rule 4 (statement -> COMMENT .)
    ELSE            reduce using rule 4 (statement -> COMMENT .)


state 6

    (5) statement -> PRINT . expr PERIOD
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 16

state 7

    (6) statement -> FN_CALL_1 . exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (20) exprs -> . expr
    (21) exprs -> . exprs_sub AND expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    (22) exprs_sub -> . expr
    (23) exprs_sub -> . exprs_sub COMMA expr
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    exprs                          shift and go to state 22
    expr                           shift and go to state 23
    exprs_sub                      shift and go to state 24

state 8

    (7) statement -> NAME . ASSIGNMENT expr PERIOD
    (10) statement -> NAME . FOR_1 expr FOR_2 expr FOR_3 statements END
    ASSIGNMENT      shift and go to state 25
    FOR_1           shift and go to state 26


state 9

    (8) statement -> RETURN . expr PERIOD
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 27

state 10

    (9) statement -> WHILE_1 . expr WHILE_2 statements END
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 28

state 11

    (11) statement -> IF_1 . expr COMMA statements END
    (12) statement -> IF_1 . expr COMMA statements ELSE statements END
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 29

state 12

    (13) statement -> FN_DEF_1_PLURAL . vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (15) vars -> . NAME
    (16) vars -> . NAME AND NAME
    (17) vars -> . NAME COMMA vars_sub
    NAME            shift and go to state 31

    vars                           shift and go to state 30

state 13

    (14) statement -> FN_DEF_1 . NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    NAME            shift and go to state 32


state 14

    (1) program -> START statements END .
    $end            reduce using rule 1 (program -> START statements END .)


state 15

    (3) statements -> statement statements .
    END             reduce using rule 3 (statements -> statement statements .)
    ELSE            reduce using rule 3 (statements -> statement statements .)


state 16

    (5) statement -> PRINT expr . PERIOD
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          shift and go to state 33
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 17

    (24) expr -> NAME .
    PERIOD          reduce using rule 24 (expr -> NAME .)
    GT              reduce using rule 24 (expr -> NAME .)
    LT              reduce using rule 24 (expr -> NAME .)
    EQ              reduce using rule 24 (expr -> NAME .)
    DIVIDE          reduce using rule 24 (expr -> NAME .)
    TIMES           reduce using rule 24 (expr -> NAME .)
    MINUS           reduce using rule 24 (expr -> NAME .)
    PLUS            reduce using rule 24 (expr -> NAME .)
    COMMA           reduce using rule 24 (expr -> NAME .)
    AND             reduce using rule 24 (expr -> NAME .)
    WHILE_2         reduce using rule 24 (expr -> NAME .)
    FOR_2           reduce using rule 24 (expr -> NAME .)
    FOR_3           reduce using rule 24 (expr -> NAME .)


state 18

    (25) expr -> STRING .
    PERIOD          reduce using rule 25 (expr -> STRING .)
    GT              reduce using rule 25 (expr -> STRING .)
    LT              reduce using rule 25 (expr -> STRING .)
    EQ              reduce using rule 25 (expr -> STRING .)
    DIVIDE          reduce using rule 25 (expr -> STRING .)
    TIMES           reduce using rule 25 (expr -> STRING .)
    MINUS           reduce using rule 25 (expr -> STRING .)
    PLUS            reduce using rule 25 (expr -> STRING .)
    COMMA           reduce using rule 25 (expr -> STRING .)
    AND             reduce using rule 25 (expr -> STRING .)
    WHILE_2         reduce using rule 25 (expr -> STRING .)
    FOR_2           reduce using rule 25 (expr -> STRING .)
    FOR_3           reduce using rule 25 (expr -> STRING .)


state 19

    (26) expr -> NUMBER .
    PERIOD          reduce using rule 26 (expr -> NUMBER .)
    GT              reduce using rule 26 (expr -> NUMBER .)
    LT              reduce using rule 26 (expr -> NUMBER .)
    EQ              reduce using rule 26 (expr -> NUMBER .)
    DIVIDE          reduce using rule 26 (expr -> NUMBER .)
    TIMES           reduce using rule 26 (expr -> NUMBER .)
    MINUS           reduce using rule 26 (expr -> NUMBER .)
    PLUS            reduce using rule 26 (expr -> NUMBER .)
    COMMA           reduce using rule 26 (expr -> NUMBER .)
    AND             reduce using rule 26 (expr -> NUMBER .)
    WHILE_2         reduce using rule 26 (expr -> NUMBER .)
    FOR_2           reduce using rule 26 (expr -> NUMBER .)
    FOR_3           reduce using rule 26 (expr -> NUMBER .)


state 20

    (27) expr -> QUOTE . NAME QUOTE
    NAME            shift and go to state 41


state 21

    (35) expr -> FN_CALL_1 . exprs COMMA NAME FN_CALL_2 PERIOD
    (20) exprs -> . expr
    (21) exprs -> . exprs_sub AND expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    (22) exprs_sub -> . expr
    (23) exprs_sub -> . exprs_sub COMMA expr
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    exprs                          shift and go to state 42
    expr                           shift and go to state 23
    exprs_sub                      shift and go to state 24

state 22

    (6) statement -> FN_CALL_1 exprs . COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    COMMA           shift and go to state 43


state 23

    (20) exprs -> expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    (22) exprs_sub -> expr .
  ! reduce/reduce conflict for COMMA resolved using rule 20 (exprs -> expr .)
    COMMA           reduce using rule 20 (exprs -> expr .)
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40
    AND             reduce using rule 22 (exprs_sub -> expr .)


state 24

    (21) exprs -> exprs_sub . AND expr
    (23) exprs_sub -> exprs_sub . COMMA expr
    AND             shift and go to state 44
    COMMA           shift and go to state 45


state 25

    (7) statement -> NAME ASSIGNMENT . expr PERIOD
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 46

state 26

    (10) statement -> NAME FOR_1 . expr FOR_2 expr FOR_3 statements END
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 47

state 27

    (8) statement -> RETURN expr . PERIOD
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          shift and go to state 48
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 28

    (9) statement -> WHILE_1 expr . WHILE_2 statements END
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    WHILE_2         shift and go to state 49
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 29

    (11) statement -> IF_1 expr . COMMA statements END
    (12) statement -> IF_1 expr . COMMA statements ELSE statements END
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    COMMA           shift and go to state 50
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 30

    (13) statement -> FN_DEF_1_PLURAL vars . COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMA           shift and go to state 51


state 31

    (15) vars -> NAME .
    (16) vars -> NAME . AND NAME
    (17) vars -> NAME . COMMA vars_sub
  ! shift/reduce conflict for COMMA resolved as shift
    AND             shift and go to state 52
    COMMA           shift and go to state 53


state 32

    (14) statement -> FN_DEF_1 NAME . COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMA           shift and go to state 54


state 33

    (5) statement -> PRINT expr PERIOD .
    COMMENT         reduce using rule 5 (statement -> PRINT expr PERIOD .)
    PRINT           reduce using rule 5 (statement -> PRINT expr PERIOD .)
    FN_CALL_1       reduce using rule 5 (statement -> PRINT expr PERIOD .)
    NAME            reduce using rule 5 (statement -> PRINT expr PERIOD .)
    RETURN          reduce using rule 5 (statement -> PRINT expr PERIOD .)
    WHILE_1         reduce using rule 5 (statement -> PRINT expr PERIOD .)
    IF_1            reduce using rule 5 (statement -> PRINT expr PERIOD .)
    FN_DEF_1_PLURAL reduce using rule 5 (statement -> PRINT expr PERIOD .)
    FN_DEF_1        reduce using rule 5 (statement -> PRINT expr PERIOD .)
    END             reduce using rule 5 (statement -> PRINT expr PERIOD .)
    ELSE            reduce using rule 5 (statement -> PRINT expr PERIOD .)


state 34

    (28) expr -> expr GT . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 55

state 35

    (29) expr -> expr LT . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 56

state 36

    (30) expr -> expr EQ . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 57

state 37

    (31) expr -> expr DIVIDE . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 58

state 38

    (32) expr -> expr TIMES . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 59

state 39

    (33) expr -> expr MINUS . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 60

state 40

    (34) expr -> expr PLUS . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 61

state 41

    (27) expr -> QUOTE NAME . QUOTE
    QUOTE           shift and go to state 62


state 42

    (35) expr -> FN_CALL_1 exprs . COMMA NAME FN_CALL_2 PERIOD
    COMMA           shift and go to state 63


state 43

    (6) statement -> FN_CALL_1 exprs COMMA . NAME FN_CALL_2_ASSIGN NAME PERIOD
    NAME            shift and go to state 64


state 44

    (21) exprs -> exprs_sub AND . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 65

state 45

    (23) exprs_sub -> exprs_sub COMMA . expr
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 66

state 46

    (7) statement -> NAME ASSIGNMENT expr . PERIOD
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          shift and go to state 67
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 47

    (10) statement -> NAME FOR_1 expr . FOR_2 expr FOR_3 statements END
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    FOR_2           shift and go to state 68
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 48

    (8) statement -> RETURN expr PERIOD .
    COMMENT         reduce using rule 8 (statement -> RETURN expr PERIOD .)
    PRINT           reduce using rule 8 (statement -> RETURN expr PERIOD .)
    FN_CALL_1       reduce using rule 8 (statement -> RETURN expr PERIOD .)
    NAME            reduce using rule 8 (statement -> RETURN expr PERIOD .)
    RETURN          reduce using rule 8 (statement -> RETURN expr PERIOD .)
    WHILE_1         reduce using rule 8 (statement -> RETURN expr PERIOD .)
    IF_1            reduce using rule 8 (statement -> RETURN expr PERIOD .)
    FN_DEF_1_PLURAL reduce using rule 8 (statement -> RETURN expr PERIOD .)
    FN_DEF_1        reduce using rule 8 (statement -> RETURN expr PERIOD .)
    END             reduce using rule 8 (statement -> RETURN expr PERIOD .)
    ELSE            reduce using rule 8 (statement -> RETURN expr PERIOD .)


state 49

    (9) statement -> WHILE_1 expr WHILE_2 . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 69
    statement                      shift and go to state 4

state 50

    (11) statement -> IF_1 expr COMMA . statements END
    (12) statement -> IF_1 expr COMMA . statements ELSE statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 70
    statement                      shift and go to state 4

state 51

    (13) statement -> FN_DEF_1_PLURAL vars COMMA . FN_DEF_2 NAME FN_DEF_3 statements END
    FN_DEF_2        shift and go to state 71


state 52

    (16) vars -> NAME AND . NAME
    NAME            shift and go to state 72


state 53

    (17) vars -> NAME COMMA . vars_sub
    (18) vars_sub -> . NAME AND NAME
    (19) vars_sub -> . NAME COMMA vars_sub
    NAME            shift and go to state 73

    vars_sub                       shift and go to state 74

state 54

    (14) statement -> FN_DEF_1 NAME COMMA . FN_DEF_2 NAME FN_DEF_3 statements END
    FN_DEF_2        shift and go to state 75


state 55

    (28) expr -> expr GT expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 28 (expr -> expr GT expr .)
    GT              reduce using rule 28 (expr -> expr GT expr .)
    LT              reduce using rule 28 (expr -> expr GT expr .)
    EQ              reduce using rule 28 (expr -> expr GT expr .)
    COMMA           reduce using rule 28 (expr -> expr GT expr .)
    AND             reduce using rule 28 (expr -> expr GT expr .)
    WHILE_2         reduce using rule 28 (expr -> expr GT expr .)
    FOR_2           reduce using rule 28 (expr -> expr GT expr .)
    FOR_3           reduce using rule 28 (expr -> expr GT expr .)
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 56

    (29) expr -> expr LT expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 29 (expr -> expr LT expr .)
    GT              reduce using rule 29 (expr -> expr LT expr .)
    LT              reduce using rule 29 (expr -> expr LT expr .)
    EQ              reduce using rule 29 (expr -> expr LT expr .)
    COMMA           reduce using rule 29 (expr -> expr LT expr .)
    AND             reduce using rule 29 (expr -> expr LT expr .)
    WHILE_2         reduce using rule 29 (expr -> expr LT expr .)
    FOR_2           reduce using rule 29 (expr -> expr LT expr .)
    FOR_3           reduce using rule 29 (expr -> expr LT expr .)
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 57

    (30) expr -> expr EQ expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 30 (expr -> expr EQ expr .)
    GT              reduce using rule 30 (expr -> expr EQ expr .)
    LT              reduce using rule 30 (expr -> expr EQ expr .)
    EQ              reduce using rule 30 (expr -> expr EQ expr .)
    COMMA           reduce using rule 30 (expr -> expr EQ expr .)
    AND             reduce using rule 30 (expr -> expr EQ expr .)
    WHILE_2         reduce using rule 30 (expr -> expr EQ expr .)
    FOR_2           reduce using rule 30 (expr -> expr EQ expr .)
    FOR_3           reduce using rule 30 (expr -> expr EQ expr .)
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 58

    (31) expr -> expr DIVIDE expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 31 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 31 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 31 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 31 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 31 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 31 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 31 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 31 (expr -> expr DIVIDE expr .)
    WHILE_2         reduce using rule 31 (expr -> expr DIVIDE expr .)
    FOR_2           reduce using rule 31 (expr -> expr DIVIDE expr .)
    FOR_3           reduce using rule 31 (expr -> expr DIVIDE expr .)
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 59

    (32) expr -> expr TIMES expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 32 (expr -> expr TIMES expr .)
    GT              reduce using rule 32 (expr -> expr TIMES expr .)
    LT              reduce using rule 32 (expr -> expr TIMES expr .)
    EQ              reduce using rule 32 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 32 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 32 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 32 (expr -> expr TIMES expr .)
    AND             reduce using rule 32 (expr -> expr TIMES expr .)
    WHILE_2         reduce using rule 32 (expr -> expr TIMES expr .)
    FOR_2           reduce using rule 32 (expr -> expr TIMES expr .)
    FOR_3           reduce using rule 32 (expr -> expr TIMES expr .)
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 60

    (33) expr -> expr MINUS expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 33 (expr -> expr MINUS expr .)
    GT              reduce using rule 33 (expr -> expr MINUS expr .)
    LT              reduce using rule 33 (expr -> expr MINUS expr .)
    EQ              reduce using rule 33 (expr -> expr MINUS expr .)
    DIVIDE          reduce using rule 33 (expr -> expr MINUS expr .)
    TIMES           reduce using rule 33 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 33 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 33 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 33 (expr -> expr MINUS expr .)
    AND             reduce using rule 33 (expr -> expr MINUS expr .)
    WHILE_2         reduce using rule 33 (expr -> expr MINUS expr .)
    FOR_2           reduce using rule 33 (expr -> expr MINUS expr .)
    FOR_3           reduce using rule 33 (expr -> expr MINUS expr .)


state 61

    (34) expr -> expr PLUS expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    PERIOD          reduce using rule 34 (expr -> expr PLUS expr .)
    GT              reduce using rule 34 (expr -> expr PLUS expr .)
    LT              reduce using rule 34 (expr -> expr PLUS expr .)
    EQ              reduce using rule 34 (expr -> expr PLUS expr .)
    DIVIDE          reduce using rule 34 (expr -> expr PLUS expr .)
    TIMES           reduce using rule 34 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 34 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 34 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 34 (expr -> expr PLUS expr .)
    AND             reduce using rule 34 (expr -> expr PLUS expr .)
    WHILE_2         reduce using rule 34 (expr -> expr PLUS expr .)
    FOR_2           reduce using rule 34 (expr -> expr PLUS expr .)
    FOR_3           reduce using rule 34 (expr -> expr PLUS expr .)


state 62

    (27) expr -> QUOTE NAME QUOTE .
    PERIOD          reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    GT              reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    LT              reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    EQ              reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    DIVIDE          reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    TIMES           reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    MINUS           reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    PLUS            reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    COMMA           reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    AND             reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    WHILE_2         reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    FOR_2           reduce using rule 27 (expr -> QUOTE NAME QUOTE .)
    FOR_3           reduce using rule 27 (expr -> QUOTE NAME QUOTE .)


state 63

    (35) expr -> FN_CALL_1 exprs COMMA . NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 76


state 64

    (6) statement -> FN_CALL_1 exprs COMMA NAME . FN_CALL_2_ASSIGN NAME PERIOD
    FN_CALL_2_ASSIGN shift and go to state 77


state 65

    (21) exprs -> exprs_sub AND expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    COMMA           reduce using rule 21 (exprs -> exprs_sub AND expr .)
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 66

    (23) exprs_sub -> exprs_sub COMMA expr .
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    AND             reduce using rule 23 (exprs_sub -> exprs_sub COMMA expr .)
    COMMA           reduce using rule 23 (exprs_sub -> exprs_sub COMMA expr .)
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 67

    (7) statement -> NAME ASSIGNMENT expr PERIOD .
    COMMENT         reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    PRINT           reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    FN_CALL_1       reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    NAME            reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    RETURN          reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    WHILE_1         reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    IF_1            reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    FN_DEF_1_PLURAL reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    FN_DEF_1        reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    END             reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)
    ELSE            reduce using rule 7 (statement -> NAME ASSIGNMENT expr PERIOD .)


state 68

    (10) statement -> NAME FOR_1 expr FOR_2 . expr FOR_3 statements END
    (24) expr -> . NAME
    (25) expr -> . STRING
    (26) expr -> . NUMBER
    (27) expr -> . QUOTE NAME QUOTE
    (28) expr -> . expr GT expr
    (29) expr -> . expr LT expr
    (30) expr -> . expr EQ expr
    (31) expr -> . expr DIVIDE expr
    (32) expr -> . expr TIMES expr
    (33) expr -> . expr MINUS expr
    (34) expr -> . expr PLUS expr
    (35) expr -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD
    NAME            shift and go to state 17
    STRING          shift and go to state 18
    NUMBER          shift and go to state 19
    QUOTE           shift and go to state 20
    FN_CALL_1       shift and go to state 21

    expr                           shift and go to state 78

state 69

    (9) statement -> WHILE_1 expr WHILE_2 statements . END
    END             shift and go to state 79


state 70

    (11) statement -> IF_1 expr COMMA statements . END
    (12) statement -> IF_1 expr COMMA statements . ELSE statements END
    END             shift and go to state 80
    ELSE            shift and go to state 81


state 71

    (13) statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 . NAME FN_DEF_3 statements END
    NAME            shift and go to state 82


state 72

    (16) vars -> NAME AND NAME .
    COMMA           reduce using rule 16 (vars -> NAME AND NAME .)


state 73

    (18) vars_sub -> NAME . AND NAME
    (19) vars_sub -> NAME . COMMA vars_sub
    AND             shift and go to state 83
    COMMA           shift and go to state 84


state 74

    (17) vars -> NAME COMMA vars_sub .
    COMMA           reduce using rule 17 (vars -> NAME COMMA vars_sub .)


state 75

    (14) statement -> FN_DEF_1 NAME COMMA FN_DEF_2 . NAME FN_DEF_3 statements END
    NAME            shift and go to state 85


state 76

    (35) expr -> FN_CALL_1 exprs COMMA NAME . FN_CALL_2 PERIOD
    FN_CALL_2       shift and go to state 86


state 77

    (6) statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN . NAME PERIOD
    NAME            shift and go to state 87


state 78

    (10) statement -> NAME FOR_1 expr FOR_2 expr . FOR_3 statements END
    (28) expr -> expr . GT expr
    (29) expr -> expr . LT expr
    (30) expr -> expr . EQ expr
    (31) expr -> expr . DIVIDE expr
    (32) expr -> expr . TIMES expr
    (33) expr -> expr . MINUS expr
    (34) expr -> expr . PLUS expr
    FOR_3           shift and go to state 88
    GT              shift and go to state 34
    LT              shift and go to state 35
    EQ              shift and go to state 36
    DIVIDE          shift and go to state 37
    TIMES           shift and go to state 38
    MINUS           shift and go to state 39
    PLUS            shift and go to state 40


state 79

    (9) statement -> WHILE_1 expr WHILE_2 statements END .
    COMMENT         reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    PRINT           reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    FN_CALL_1       reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    NAME            reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    RETURN          reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    WHILE_1         reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    IF_1            reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    FN_DEF_1_PLURAL reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    FN_DEF_1        reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    END             reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)
    ELSE            reduce using rule 9 (statement -> WHILE_1 expr WHILE_2 statements END .)


state 80

    (11) statement -> IF_1 expr COMMA statements END .
    COMMENT         reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    PRINT           reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    FN_CALL_1       reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    NAME            reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    RETURN          reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    WHILE_1         reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    IF_1            reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    FN_DEF_1_PLURAL reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    FN_DEF_1        reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    END             reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)
    ELSE            reduce using rule 11 (statement -> IF_1 expr COMMA statements END .)


state 81

    (12) statement -> IF_1 expr COMMA statements ELSE . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 89
    statement                      shift and go to state 4

state 82

    (13) statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME . FN_DEF_3 statements END
    FN_DEF_3        shift and go to state 90


state 83

    (18) vars_sub -> NAME AND . NAME
    NAME            shift and go to state 91


state 84

    (19) vars_sub -> NAME COMMA . vars_sub
    (18) vars_sub -> . NAME AND NAME
    (19) vars_sub -> . NAME COMMA vars_sub
    NAME            shift and go to state 73

    vars_sub                       shift and go to state 92

state 85

    (14) statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME . FN_DEF_3 statements END
    FN_DEF_3        shift and go to state 93


state 86

    (35) expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 . PERIOD
    PERIOD          shift and go to state 94


state 87

    (6) statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME . PERIOD
    PERIOD          shift and go to state 95


state 88

    (10) statement -> NAME FOR_1 expr FOR_2 expr FOR_3 . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 96
    statement                      shift and go to state 4

state 89

    (12) statement -> IF_1 expr COMMA statements ELSE statements . END
    END             shift and go to state 97


state 90

    (13) statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 98
    statement                      shift and go to state 4

state 91

    (18) vars_sub -> NAME AND NAME .
    COMMA           reduce using rule 18 (vars_sub -> NAME AND NAME .)


state 92

    (19) vars_sub -> NAME COMMA vars_sub .
    COMMA           reduce using rule 19 (vars_sub -> NAME COMMA vars_sub .)


state 93

    (14) statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 . statements END
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . COMMENT
    (5) statement -> . PRINT expr PERIOD
    (6) statement -> . FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD
    (7) statement -> . NAME ASSIGNMENT expr PERIOD
    (8) statement -> . RETURN expr PERIOD
    (9) statement -> . WHILE_1 expr WHILE_2 statements END
    (10) statement -> . NAME FOR_1 expr FOR_2 expr FOR_3 statements END
    (11) statement -> . IF_1 expr COMMA statements END
    (12) statement -> . IF_1 expr COMMA statements ELSE statements END
    (13) statement -> . FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    (14) statement -> . FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END
    COMMENT         shift and go to state 5
    PRINT           shift and go to state 6
    FN_CALL_1       shift and go to state 7
    NAME            shift and go to state 8
    RETURN          shift and go to state 9
    WHILE_1         shift and go to state 10
    IF_1            shift and go to state 11
    FN_DEF_1_PLURAL shift and go to state 12
    FN_DEF_1        shift and go to state 13

    statements                     shift and go to state 99
    statement                      shift and go to state 4

state 94

    (35) expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .
    PERIOD          reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    GT              reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    LT              reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    EQ              reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    DIVIDE          reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    TIMES           reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    MINUS           reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    PLUS            reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    COMMA           reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    AND             reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    WHILE_2         reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    FOR_2           reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)
    FOR_3           reduce using rule 35 (expr -> FN_CALL_1 exprs COMMA NAME FN_CALL_2 PERIOD .)


state 95

    (6) statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .
    COMMENT         reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    PRINT           reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    FN_CALL_1       reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    NAME            reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    RETURN          reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    WHILE_1         reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    IF_1            reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    FN_DEF_1_PLURAL reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    FN_DEF_1        reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    END             reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)
    ELSE            reduce using rule 6 (statement -> FN_CALL_1 exprs COMMA NAME FN_CALL_2_ASSIGN NAME PERIOD .)


state 96

    (10) statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements . END
    END             shift and go to state 100


state 97

    (12) statement -> IF_1 expr COMMA statements ELSE statements END .
    COMMENT         reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    PRINT           reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    FN_CALL_1       reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    NAME            reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    RETURN          reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    WHILE_1         reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    IF_1            reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    FN_DEF_1_PLURAL reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    FN_DEF_1        reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    END             reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)
    ELSE            reduce using rule 12 (statement -> IF_1 expr COMMA statements ELSE statements END .)


state 98

    (13) statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements . END
    END             shift and go to state 101


state 99

    (14) statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements . END
    END             shift and go to state 102


state 100

    (10) statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .
    COMMENT         reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    PRINT           reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    FN_CALL_1       reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    NAME            reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    RETURN          reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    WHILE_1         reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    IF_1            reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    FN_DEF_1_PLURAL reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    FN_DEF_1        reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    END             reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)
    ELSE            reduce using rule 10 (statement -> NAME FOR_1 expr FOR_2 expr FOR_3 statements END .)


state 101

    (13) statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .
    COMMENT         reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    PRINT           reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_CALL_1       reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    NAME            reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    RETURN          reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    WHILE_1         reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    IF_1            reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_DEF_1_PLURAL reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_DEF_1        reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    END             reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    ELSE            reduce using rule 13 (statement -> FN_DEF_1_PLURAL vars COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)


state 102

    (14) statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .
    COMMENT         reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    PRINT           reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_CALL_1       reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    NAME            reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    RETURN          reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    WHILE_1         reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    IF_1            reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_DEF_1_PLURAL reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    FN_DEF_1        reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    END             reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)
    ELSE            reduce using rule 14 (statement -> FN_DEF_1 NAME COMMA FN_DEF_2 NAME FN_DEF_3 statements END .)


Conflicts:

shift/reduce conflict for COMMA in state 31 resolved as shift
reduce/reduce conflict in state 23 resolved using rule exprs -> expr
rejected rule (exprs_sub -> expr) in state 23